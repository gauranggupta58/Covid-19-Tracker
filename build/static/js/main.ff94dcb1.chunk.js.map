{"version":3,"sources":["Infobox.jsx","util.js","Map.jsx","Table.jsx","LineGraph.jsx","App.jsx","index.js"],"names":["Infobox","title","cases","isRed","isGrey","active","total","props","Card","onClick","className","CardContent","Typography","color","classname","casesTypeColors","hex","mulitiplier","recovered","deaths","sortData","data","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","pathOptions","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","Map","countries","zoom","ChangeView","useMap","setView","MapContainer","TileLayer","attribution","url","Table","options","plugins","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","fill","App","setCountries","setcountry","setCountryInfo","tableData","setTableData","mapCenter","setmapCenter","mapZoom","setmapZoom","mapCountries","setmapCountries","setCasesType","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","lng","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff94dcb1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./InfoBox.css\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nfunction Infobox({ title, cases, isRed, isGrey, active, total, ...props }) {\n  return (\n    <Card\n      onClick={props.onClick}\n      className={`infoBox ${active && \"infoBox--selected\"} ${\n        isRed && \"infoBox--red\"\n      } ${isGrey && \"infoBox--grey\"}`}\n    >\n      <CardContent>\n        <Typography className=\"infoBox__title\" color=\"textSecondary\">\n          {title}\n        </Typography>\n        <h2\n          className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"} ${\n            isGrey && \"infoBox__cases--black\"\n          }\n\n          `}\n        >\n          {cases}\n        </h2>\n        <Typography classname=\"infoBox__total\" color=\"textSecondary\">\n          {total} Total\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Infobox;\n","import React from \"react\";\nimport numeral from \"numeral\";\n\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n\n    mulitiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n\n    mulitiplier: 1200,\n  },\n  deaths: {\n    hex: \" #333333\",\n\n    mulitiplier: 2000,\n  },\n};\nexport const sortData = (data) => {\n  const sortedData = [...data];\n\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType) =>\n  data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      pathOptions={{\n        color: casesTypeColors[casesType].hex,\n        fillColor: casesTypeColors[casesType].hex,\n      }}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType] / 10) *\n        casesTypeColors[casesType].mulitiplier\n      }\n    >\n      <Popup>\n        <div classname=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases:{numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered:{numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            deaths:{numeral(country.cases).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n","import React from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\nimport { showDataOnMap } from \"./util\";\n\nfunction Map({ countries, casesType, center, zoom }) {\n  function ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n  return (\n    <div className=\"map\">\n      <MapContainer center={center} zoom={zoom}>\n        <ChangeView center={center} zoom={zoom} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {showDataOnMap(countries, casesType)}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Map;\n","import React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table\">\n      {countries.map(({ country, cases }) => (\n        <tr>\n          <td>{country}</td>\n          <td>\n            <strong>{numeral(cases).format(\"000,000\")}</strong>\n          </td>\n        </tr>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false,\n    },\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType, ...props }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          console.log(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div className={props.className}>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204,16,52,0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n                fill: true,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport Infobox from \"./Infobox\";\nimport Map from \"./Map\";\n\nimport Table from \"./Table\";\n\nimport { sortData, prettyPrintStat } from \"./util\";\n\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n\n  const [country, setcountry] = useState(\"worldwide\");\n\n  const [countryInfo, setCountryInfo] = useState({});\n\n  const [tableData, setTableData] = useState([]);\n\n  const [mapCenter, setmapCenter] = useState([34.80746, -40.4796]);\n\n  const [mapZoom, setmapZoom] = useState(3);\n\n  const [mapCountries, setmapCountries] = useState([]);\n\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n          setmapCountries(data);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    setcountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setcountry(countryCode);\n        setCountryInfo(data);\n        countryCode === \"worldwide\"\n          ? setmapCenter({ lat: 34.80746, lng: -40.476 })\n          : setmapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setmapZoom(4);\n      });\n    //for worldwide stats use this url\n\n    //https://disease.sh/v3/covid-19/all\n    //https://disease.sh/v3/covid-19/countries/[countrycode]\n  };\n  console.log(countryInfo);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <Infobox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)}\n          />\n          <Infobox\n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)}\n          />\n          <Infobox\n            isGrey\n            active={casesType === \"deaths\"}\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)}\n          />\n        </div>\n\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live cases by country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app__graphtitle\">Worldwide new {casesType}</h3>\n\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}